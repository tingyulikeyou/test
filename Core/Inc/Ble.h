#ifndef __BLE_H__
#define __BLE_H__


#define UART1_RX_BUF_SIZE  256
#define BLE_BUFFER_SIZE  128
#if defined(E_MOB48V_PROJECT) ||defined(P10KW_PROJECT)
#define BLE_ENABLE
//#define BLE_MASTER_ENABLE

#endif


enum
{

	BLE_ATT_OPID,
	BLE_ATT_PPID,
	BLE_ATT_FLID,
	BLE_ATT_FRMV,

	BLE_CMD_PUBK, 
	BLE_CMD_GSTW,	
	BLE_CMD_GCTW,
	BLE_CMD_NAPN,	
	BLE_CMD_SWCH,
	BLE_CMD_READ,
	BLE_CMD_RPTM,
	BLE_CMD_HBFQ,
	#ifdef P10KW_PROJECT
	BLE_CMD_AOCT,
	BLE_CMD_AOSS,
	BLE_CMD_BCSS,
	BLE_CMD_UOST,
	BLE_CMD_UOET,
	BLE_CMD_UCST,
	BLE_CMD_UCET,
	BLE_CMD_PIMD,
	BLE_CMD_AIMD,
	BLE_CMD_LNGS,
	BLE_CMD_AOVS,
	BLE_CMD_AOFS,
	BLE_CMD_OLRS,
	BLE_CMD_OTRS,
	BLE_CMD_BZON,
	BLE_CMD_CASS,
	BLE_CMD_MXCC,
	BLE_CMD_BBCV,
	BLE_CMD_BFCV,
	BLE_CMD_LBUS,
	BLE_CMD_ACCS,
	BLE_CMD_AGMD,
	BLE_CMD_STYS,
	BLE_CMD_STMS,
	BLE_CMD_STDS,
	BLE_CMD_STHS,
	BLE_CMD_STMM,
	BLE_CMD_STSS,
	#endif

	BLE_STS_SSTC,
	BLE_STS_CRTM,
	BLE_STS_UDTM,
	BLE_STS_TIME,
	BLE_STS_PLAT,
	BLE_STS_PLON,
	BLE_STS_GPSS,
	BLE_STS_GPFC,
	BLE_STS_RCRD,	
	BLE_STS_TRHD,	
	BLE_STS_TPGD,	
	BLE_STS_PGST,
	BLE_STS_TKRE,
	BLE_STS_OCST,

	#ifdef P10KW_PROJECT
	//DTA                      
	BLE_DTA_BATP,
	BLE_DTA_INPP,
	BLE_DTA_OUTP,
	BLE_DTA_AENG,
	BLE_DTA_PCKV,
	BLE_DTA_PCKC,
	BLE_DTA_RSOC,
	BLE_DTA_RCAP,
	BLE_DTA_FCCP,
	BLE_DTA_PCKT,
	BLE_DTA_ACYC,
	BLE_DTA_PV1V,
	BLE_DTA_PV2V,
	BLE_DTA_PV1P,
	BLE_DTA_PV2P,
	BLE_DTA_CG1C,
	BLE_DTA_CG2C,
	BLE_DTA_AOAP,
	BLE_DTA_AOVA,
	BLE_DTA_ACAP,
	BLE_DTA_ACVA,
	BLE_DTA_BPKV,
	BLE_DTA_ACOV,
	BLE_DTA_ACOF,
	BLE_DTA_DCOV,
	BLE_DTA_LDPP,
	BLE_DTA_OUTC,
	BLE_DTA_AIPP,
	BLE_DTA_FLTB,
	BLE_DTA_WRNB,
	BLE_DTA_ACDE,
	BLE_DTA_ACTE,
	BLE_DTA_BDDE,
	BLE_DTA_BDTE,
	BLE_DTA_AODE,
	BLE_DTA_AOTE,
	BLE_DTA_BTNP,
	BLE_DTA_BOCF,
	//DIA

	BLE_DIA_BUSV,
	BLE_DIA_ACIV,
	BLE_DIA_ACIF,
	BLE_DIA_IVTT,
	BLE_DIA_CVTT,
	BLE_DIA_BPTV,
	BLE_DIA_BBSV,
	BLE_DIA_WKTM,
	BLE_DIA_BK1T,
	BLE_DIA_BK2T,
	BLE_DIA_INTC,
	BLE_DIA_AIAP,
	BLE_DIA_AIVA,
	BLE_DIA_WRNV,
	BLE_DIA_DVTC,
	BLE_DIA_DVCS,
	BLE_DIA_PRLM,
	BLE_DIA_CPOK,
	BLE_DIA_P1DE,
	BLE_DIA_P1TE,
	BLE_DIA_P2DE,
	BLE_DIA_P2TE,
	BLE_DIA_ABCC,
	BLE_DIA_ACDP,
	BLE_DIA_ADVA,
	BLE_DIA_BDAP,
	BLE_DIA_BDVA,
	BLE_DIA_MCFS,
	BLE_DIA_IVFS,
	BLE_DIA_CCRT,
	BLE_DIA_DCCT,
	BLE_DIA_DCDE,
	BLE_DIA_DCTE,
	BLE_DIA_PCCR,
	
	#else

	BLE_DTA_BATP,
	BLE_DTA_INPP,
	BLE_DTA_OUTP,
	BLE_DTA_AENG,
	BLE_DTA_PCKV,
	BLE_DTA_PCKC,
	BLE_DTA_RSOC,
	BLE_DTA_RCAP,
	BLE_DTA_FCCP,
	BLE_DTA_PCKT,
	BLE_DTA_SLON,
	BLE_DTA_SLAT,
	BLE_DTA_SALT,
	BLE_DTA_SSTM,
	BLE_DTA_SGPS,
	BLE_DTA_SSPE,
	//BLE_DTA_ACYC,


	BLE_DIA_CV01,
	BLE_DIA_CV02,
	BLE_DIA_CV03,
	BLE_DIA_CV04,
	BLE_DIA_CV05,
	BLE_DIA_CV06,
	BLE_DIA_CV07,
	BLE_DIA_CV08,
	BLE_DIA_CV09,
	BLE_DIA_CV10,
	BLE_DIA_CV11,
	BLE_DIA_CV12,
	BLE_DIA_CV13,
	BLE_DIA_CV14,
	BLE_DIA_CV15,
	BLE_DIA_CV16,
	#ifdef BMS_JBD_SUPPROT
	BLE_DIA_CV17,
	BLE_DIA_CV18,
	BLE_DIA_CV19,
	BLE_DIA_CV20,
	#endif
	#endif

	BLE_COM_IDLE,
	BLE_COM_COUNT
};


typedef struct  
{
  uint8_t header;	//5B
  uint8_t lenght;	
  uint8_t com;
  uint8_t datalen;
  
  uint8_t *data;
  
  uint16_t checksum;  //crc 15
  uint16_t end;  //5A5B

} BLE_PACKET_TypeDef;

void BleUartInit(void);
void BleCmdProc(void);
void BlePacktSend(uint8_t cmd,uint8_t *data,uint16_t lenght);
uint8_t  BlePacktParse(uint8_t *buf,uint8_t *data,uint8_t*len);
void BleComEnable(void);
void BleDataCheck(void);
void BleDataReprot(uint8_t cmd );


#endif

